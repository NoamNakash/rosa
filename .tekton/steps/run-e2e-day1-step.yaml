apiVersion: tekton.dev/v1beta1
kind: StepAction
metadata:
  name: run-e2e-day1
spec:
  description: |
    This is a day1 step to prepare cluster for rosacli job
  image: $(params.container-image)
  workingDir: /
  params:
    - name: container-image
    - name: secret-volume
    - name: output-volume
    - name: secret-ref
    - name: channel-group
    - name: aws-region
    - name: cluster-profile
    - name: ocm-login-env
  volumeMounts:
    - name: $(params.secret-volume)
      mountPath: /mnt/secrets
    - name: $(params.output-volume)
      mountPath: /tests/output
  env:
    - name: AWS_CREDENTIALS
      value: "/mnt/secrets/aws_cred"
    - name: AWS_SHAREDVPC_CREDENTIALS
      value: "/mnt/secrets/awscred_shared_account"
    - name: OCM_TOKEN
      valueFrom:
        secretKeyRef:
          name: $(params.secret-ref)
          key: oex_org_admin_token
    - name: OCM_LOGIN_ENV
      value: $(params.ocm-login-env)
    - name: AWS_REGION
      value: $(params.aws-region)
    - name: TEST_PROFILE
      value: $(params.cluster-profile)
  script: |
    #!/bin/bash
    # setup golang
    GO_VERSION=1.23.9
    wget https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz
    tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
    export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin

    # setup rosacli
    git clone https://github.com/openshift/rosa.git /rosa
    cd /rosa
    source ./tests/prow_ci.sh
    configure_aws "${AWS_CREDENTIALS}" "${AWS_REGION}"
    configure_aws_shared_vpc "${AWS_SHAREDVPC_CREDENTIALS}/.awscred_shared_account"

    rosa login --env ${OCM_LOGIN_ENV} --token ${OCM_TOKEN}
    rosa whoami
    rosa version

    # day1: prepare testing cluster
    export PATH=$PATH:$HOME/go/bin
    go install github.com/onsi/ginkgo/v2/ginkgo@latest
    ginkgo ./tests/e2e --ginkgo.v --ginkgo.no-color \
      --ginkgo.timeout "100m" \
      --ginkgo.label-filter "day1"
    rc1=$?

    # cluster setup readiness step
    ginkgo ./tests/e2e --ginkgo.v --ginkgo.no-color \
      --ginkgo.timeout "60m" \
      --ginkgo.label-filter "day1-readiness"
    rc2=$?

    # day1-post check
    ginkgo ./tests/e2e --ginkgo.v --ginkgo.no-color \
      --ginkgo.timeout "60m" \
      --ginkgo.label-filter "day1-post"
    rc3=$?
    if [ $rc1 -ne 0 ] || [ $rc2 -ne 0 ] || [ $rc3 -ne 0 ]; then
      exit 1
    fi
